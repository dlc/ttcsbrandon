#!/usr/bin/env perl

# ----------------------------------------------------------------------
# This script takes several ical URIs, combines them, and generates a
# data file suitable for use by Template::Plugin::DataFile.
# ----------------------------------------------------------------------

use strict;
use vars qw(%URIS @EVENTS);

use Data::Dumper;
use Time::ParseDate qw(parsedate);
use POSIX qw(strftime);

# This should be replaced by a call to the gcal API
%URIS = (
    'Branch Events'                 => 'http://www.google.com/calendar/ical/sevenroot.org_ju71aol0lv57fr40lo9j7jqkm4%40group.calendar.google.com/public/basic.ics',
    'ITTCS - Workshop Calendar'     => 'http://www.google.com/calendar/ical/sevenroot.org_ttup851cghkelmok01996t67d4%40group.calendar.google.com/public/basic.ics',
    'Tampa Bay Area Events'         => 'http://www.google.com/calendar/ical/sevenroot.org_lpoeervqb9glnn89erv431lieo%40group.calendar.google.com/public/basic.ics',
    'TTCS USA - Workshop Schedule'  => 'http://www.google.com/calendar/ical/sevenroot.org_eaimolq0gsk3v2jva2f60m68n0%40group.calendar.google.com/public/basic.ics',
);

while (my ($cal, $uri) = each %URIS) {
    warn "Fetching `$cal' calendar...\n";
    my ($data, @events);

    $data = get($uri);
    $data =~ s/\r//g;
    $data =~ s/\n\s+//gs;
    (@events) = $data =~ /BEGIN:VEVENT(.+?)END:VEVENT/gs;

    for my $e (@events) {
        my ($start)     = $e =~ /^DTSTART.*?:.*?([0-9TZ]+)/m;
        my ($end)       = $e =~ /^DTEND.*?:.*?([0-9TZ]+)/m;
        my ($summary)   = $e =~ /^SUMMARY:(.*)/m;
        my ($desc)      = $e =~ /^DESCRIPTION:(.*)/m;
        my ($loc)       = $e =~ /^LOCATION:(.*)/m;
        my ($lmod)      = $e =~ /^LAST-MODIFIED:(.*)/m;

        $start      = extract_date($start);
        $end        = extract_date($end);
        $lmod       = extract_date($lmod);

        for ($summary, $desc, $loc) {
            s/\\(?!n)//g;
        }

        push @EVENTS, {
            'start'     => $start,
            'end'       => $end,
            'summary'   => $summary,
            'desc'      => $desc,
            'location'  => $loc,
            'source'    => $cal,
            'lastmod'   => $lmod,
        };
    }
}

@EVENTS = sort { $a->{'start'} cmp $b->{'start'} } @EVENTS;

print "dtime|title|content|location|source|lastmod\n";
for my $e (@EVENTS) {
    printf "%s|%s|%s|%s|%s|%s\n",
        $e->{'start'},
        $e->{'summary'},
        $e->{'desc'},
        $e->{'location'},
        $e->{'source'},
        $e->{'lastmod'};
}

sub extract_date {
    my $d = shift;
    if ($d =~ /^(\d\d\d\d)(\d\d)(\d\d)/) {
        $d = strftime "%Y/%m/%d",
            localtime scalar parsedate("$1/$2/$3");
    }

    return $d;
}

sub get {
    my $uri = shift;
    `curl -sSkL "$uri"`;
}
